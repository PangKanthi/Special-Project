import React, { useState } from "react";
import { Card } from "primereact/card";
import { Dropdown } from "primereact/dropdown";
import { Chart } from "primereact/chart";
import { Dialog } from "primereact/dialog";
import { DataTable } from "primereact/datatable";
import { Column } from "primereact/column";
import useCompletedOrders from "./Homeadmin component/useCompletedOrders";
import useCompletedRepairs from "./Homeadmin component/useCompletedRepairs";
import useUserCount from "./Homeadmin component/useUserCount";
import useInventoryData from "./Homeadmin component/useInventoryData";
import useSalesData from "./Homeadmin component/useSalesData";
import useFailedOrders from "./Homeadmin component/useFailedOrders";

const Homeadmin = () => {
    const [selectedMonth, setSelectedMonth] = useState("Jan");
    const completedOrders = useCompletedOrders(selectedMonth);
    const completedRepairs = useCompletedRepairs(selectedMonth);
    const { totalStock, productStock } = useInventoryData();
    const [inventoryDialog, setInventoryDialog] = useState(false);
    const salesDataFromAPI = useSalesData(selectedMonth);
    const failedOrders = useFailedOrders(selectedMonth);
    const userCount = useUserCount();


    const months = [
        { label: "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", value: "Jan" },
        { label: "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", value: "Feb" },
        { label: "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", value: "Mar" },
        { label: "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", value: "Apr" },
        { label: "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", value: "May" },
        { label: "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", value: "Jun" },
        { label: "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", value: "Jul" },
        { label: "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", value: "Aug" },
        { label: "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", value: "Sep" },
        { label: "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", value: "Oct" },
        { label: "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", value: "Nov" },
        { label: "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°", value: "Dec" }
    ];

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    const data = {
        ordersCompleted: 120,
        inventory: 500,
        users: 80,
        repairsCompleted: 30,
        ordersFailed: 10,
        repairsFailed: 5,
        sales: [200, 300, 250, 400, 350, 450, 500, 600, 550, 700, 750, 800]
    };

    // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Chart.js
    const salesChartData = {
        labels: salesDataFromAPI.map(item => item.name),
        datasets: [
            {
                label: "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ö‡∏≤‡∏ó)",
                data: salesDataFromAPI.map(item => item.sales),
                backgroundColor: "rgba(54, 162, 235, 0.6)",
                borderColor: "rgba(54, 162, 235, 1)",
                borderWidth: 2
            }
        ]
    };

    return (
        <div className="p-5">
            {/* Header */}
            <div className="flex justify-content-between align-items-center mb-4">
                <h2 className="text-2xl font-semibold flex align-items-center">
                    üìä Dashboard ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö
                </h2>
                <Dropdown
                    value={selectedMonth}
                    options={months}
                    onChange={(e) => setSelectedMonth(e.value)}
                    placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"
                    className="w-12rem"
                />
            </div>

            {/* Layout: ‡∏Å‡∏≤‡∏£‡πå‡∏î 6 ‡∏≠‡∏±‡∏ô + ‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ */}
            <div className="grid">
                {/* ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ - ‡∏Å‡∏≤‡∏£‡πå‡∏î 6 ‡∏≠‡∏±‡∏ô (‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô) */}
                <div className="col-12 md:col-5">
                    <div className="grid">
                        {[
                            { title: "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", value: completedOrders, color: "text-green-500", unit: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" },
                            { title: "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", value: failedOrders, color: "text-red-500", unit: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" }, // ‚úÖ ‡πÉ‡∏ä‡πâ API ‡∏à‡∏£‡∏¥‡∏á
                            { title: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏á‡∏Ñ‡∏•‡∏±‡∏á", value: totalStock, color: "text-blue-500", unit: "‡∏ä‡∏¥‡πâ‡∏ô", onClick: () => setInventoryDialog(true) }, // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å
                            { title: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", value: userCount, color: "text-purple-500", unit: "‡∏Ñ‡∏ô" },
                            { title: "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", value: completedRepairs, color: "text-teal-500", unit: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" },
                            { title: "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", value: data.repairsFailed, color: "text-orange-500", unit: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" }
                        ].map((item, index) => (
                            <div className="col-6 p-2" key={index}>
                                <Card
                                    className="shadow-3 p-2 text-center hover:shadow-5 transition-all duration-300 cursor-pointer"
                                    onClick={item.onClick} // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å
                                >
                                    <h4 className="text-gray-700 text-sm">{item.title}</h4>
                                    <h3 className={`font-bold text-md ${item.color}`}>{item.value} {item.unit}</h3>
                                </Card>
                            </div>
                        ))}
                    </div>
                </div>

                {/* ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤ - ‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏•‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏î‡∏∏‡∏•) */}
                <div className="col-12 md:col-7">
                    <Card title="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô" className="shadow-3 p-3">
                        <Chart type="bar" data={salesChartData} options={{
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 100
                                    }
                                }
                            }
                        }} style={{ height: "435px" }} />
                    </Card>
                </div>
            </div>
            {/* ‚úÖ Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏á‡∏Ñ‡∏•‡∏±‡∏á */}
            <Dialog header="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏á‡∏Ñ‡∏•‡∏±‡∏á" visible={inventoryDialog} style={{ width: '50vw' }} onHide={() => setInventoryDialog(false)}>
                <DataTable value={productStock} paginator rows={5}>
                    <Column field="id" header="‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"></Column>
                    <Column field="name" header="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"></Column>
                    <Column field="type" header="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"></Column>
                    <Column field="stock" header="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"></Column>
                </DataTable>
            </Dialog>
        </div>
    );
};

export default Homeadmin;
