generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(100)
  description              String?
  price                    Decimal                    @db.Decimal(10, 2)
  category                 String                     @db.VarChar(50)
  warranty                 String?                    @db.VarChar(50)
  is_part                  Boolean?                   @default(false)
  stock_quantity           Int?                       @default(0)
  created_at               DateTime?                  @default(now()) @db.Timestamp(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamp(6)

  installation_kit_product installation_kit_product[]
  images product_image[] 
}

model product_image {
  id         Int     @id @default(autoincrement())
  productId  Int
  imageUrl   String  @db.Text

  product    product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model installation_kit {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(100)
  description              String?
  price                    Decimal                    @db.Decimal(10, 2)
  warranty                 String?                    @db.VarChar(50)
  created_at               DateTime?                  @default(now()) @db.Timestamp(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamp(6)

  installation_kit_product installation_kit_product[]
  images installation_kit_image[]
}

model installation_kit_image {
  id                Int    @id @default(autoincrement())
  installationKitId Int
  imageUrl         String @db.Text

  installationKit  installation_kit @relation(fields: [installationKitId], references: [id], onDelete: Cascade)
}

model installation_kit_product {
  id                  Int              @id @default(autoincrement())
  installation_kit_id Int
  product_id          Int
  installation_kit    installation_kit @relation(fields: [installation_kit_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product             product          @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id        Int     @id @default(autoincrement())
  username  String  @db.VarChar(20)
  firstname String  @db.VarChar(50)
  lastname  String  @db.VarChar(50)
  password  String  @db.VarChar(100)
  email     String  @db.VarChar(50)
  phone     String? @db.VarChar(10)
  role      String? @db.Char(1)

  addresses Address[]
}

model Address {
  id           Int     @id @default(autoincrement())
  addressLine  String  @db.Text                 
  city         String  @db.VarChar(100)   
  state        String? @db.VarChar(100)         
  postalCode   String  @db.VarChar(10)           
  userId       Int                                 
  isPrimary    Boolean @default(false)             
  isShipping   Boolean @default(true)               


  user         user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}
